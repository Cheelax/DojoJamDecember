/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from '@dojoengine/recs';

export function defineContractComponents(world: World) {
  return {
    EntityLifeStatus: (() => {
      return defineComponent(
        world,
        {
          id: RecsType.BigInt,
          infectionStacks: RecsType.Number,
          isInfected: RecsType.Boolean,
          deadAt: RecsType.Number,
          isDead: RecsType.Boolean,
        },
        {
          metadata: {
            name: 'EntityLifeStatus',
            types: ['felt252', 'u8', 'bool', 'u64', 'bool'],
            customTypes: [],
          },
        }
      );
    })(),
    Player: (() => {
      return defineComponent(
        world,
        { id: RecsType.BigInt, x: RecsType.Number, y: RecsType.Number, orientation: RecsType.Number, character: RecsType.Number },
        {
          metadata: {
            name: 'Player',
            types: ['felt252', 'u16', 'u16', 'u8', 'u8'],
            customTypes: [],
          },
        }
      );
    })(),
    ERC20Balance: (() => {
	    return defineComponent(
	      world,
	      {
          token: RecsType.String,
          account: RecsType.String,
          amount: RecsType.BigInt,
        },
	      {
	        metadata: {
	          name: "ERC20Balance",
	          types: ["contractaddress","contractaddress","u128"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
    PlayerScore: (() => {
      return defineComponent(
        world,
        { id: RecsType.BigInt, nb_tiles_explored: RecsType.Number },
        {
          metadata: {
            name: 'PlayerScore',
            types: ['felt252', 'u16'],
            customTypes: [],
          },
        }
      );
    })(),
    Tile: (() => {
      return defineComponent(
        world,
        { index: RecsType.Number, x: RecsType.Number, y: RecsType.Number, _type: RecsType.Number },
        {
          metadata: {
            name: 'Tile',
            types: ['u16', 'u16', 'u16', 'u8'],
            customTypes: [],
          },
        }
      );
    })(),
    TileAtPosition: (() => {
      return defineComponent(
        world,
        { x: RecsType.Number, y: RecsType.Number, _type: RecsType.Number },
        {
          metadata: {
            name: 'TileAtPosition',
            types: [ 'u16', 'u16', 'u8'],
            customTypes: [],
          },
        }
      );
    })(),
    PlayerInventory: (() => {
      return defineComponent(
        world,
        { id: RecsType.BigInt, nb_white_herbs: RecsType.Number, nb_red_potions: RecsType.Number },
        {
          metadata: {
            name: 'PlayerInventory',
            types: [ 'felt252', 'u8', 'u8'],
            customTypes: [],
          },
        }
      );
    })(),
  };
}
